# This is a basic workflow to help you get started with Actions

name: Test minikube script (k8s)

# Controls when the workflow will run
on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: read
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-minikube:
    name: Test with minikube
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          minikube-version: 1.31.2
          driver: docker
          kubernetes-version: v1.28.1
      - name: test script
        run: |
          kubectl apply -f k8s/workspace-psa.yml
          kubectl apply -f k8s/secrets-config.yml
          kubectl apply -f k8s/secrets-secret.yml
          kubectl apply -f k8s/challenge33.yml
          kubectl apply -f k8s/secret-challenge-deployment.yml
          while [[ $(kubectl get pods -l app=secret-challenge -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for secret-challenge" && sleep 2; done
          kubectl logs -l app=secret-challenge -f >> pod.log &
          kubectl expose deployment secret-challenge --type=LoadBalancer --port=8080
          kubectl port-forward \
              $(kubectl get pod -l app=secret-challenge -o jsonpath="{.items[0].metadata.name}") \
              8080:8080 \
              &
          echo "Do minikube delete to stop minikube from running and cleanup to start fresh again"
          echo "wait 20 seconds so we can check if vault-k8s-container works"
          sleep 20
          if curl http://localhost:8080/spoil/challenge-5 -s | grep -q spoiler-answer
          then
             echo "spoil-challenge-5 works"
          else
             echo "error in spoil-challenge-5"
          fi
          if curl http://localhost:8080/spoil/challenge-6 -s | grep -q spoiler-answer
          then
             echo "spoil-challenge-6 works"
          else
             echo "error in spoil-challenge-6"
          fi
          if curl http://localhost:8080/spoil/challenge-7 -s | grep -q spoiler-answer
          then
             echo "spoil-challenge-7 works"
          else
             echo "error in spoil-challenge-7"
          fi
          if curl http://localhost:8080/spoil/challenge-33 -s | grep -q spoiler-answer
          then
             echo "spoil-challenge-33 works"
          else
             echo "error in spoil-challenge-33"
          fi
          echo "logs from pod to make sure:"
          cat pod.log

  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 21
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libnss3
          sudo apt install wget
          wget https://download.java.net/java/early_access/jdk21/28/GPL/openjdk-21-ea+xx_linux-x64_bin.tar.gz
          tar -xvf openjdk-21-ea+28_linux-x64_bin.tar.gz
          cd jdk-21
          sudo mkdir -p /usr/local/jdk-21
          sudo mv * /usr/local/jdk-21
          export JAVA_HOME=/usr/local/jdk-21
          export PATH=$JAVA_HOME/bin:$PATH
          source ~/.bashrc
          echo 'export JAVA_HOME=/usr/local/jdk-21' >> ~/.bashrc
          echo 'export PATH=$JAVA_HOME/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc
          npm install
          ./mvnw spring-boot:run
      - name: Run Tests
        run: npx cypress run --config-file src/test/K8s-tests/cypress.config.js
